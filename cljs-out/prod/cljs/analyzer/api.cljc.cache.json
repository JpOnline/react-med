["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",["~$find-ns","~$remove-ns","~$ns-publics","~$ns-resolve","~$ns-interns","~$all-ns","~$resolve"]],"~:name","~$cljs.analyzer.api","~:imports",null,"~:requires",["^ ","~$env","~$cljs.env","^A","^A","~$ana","~$cljs.analyzer","^C","^C"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$with-state",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/jp/projects/react-med/target/public/cljs-out/prod/cljs/analyzer/api.cljc","~:line",25,"~:column",11,"~:end-line",25,"~:end-column",21,"~:macro",true,"~:arglists",["~#list",["~$quote",["^Q",[["~$state","~$body"]]]]],"~:doc","Run the body with the given compilation state Atom<Map>."],"^<","~$cljs.analyzer.api/with-state","^J","target/public/cljs-out/prod/cljs/analyzer/api.cljc","^N",21,"~:method-params",["^Q",[["~$&form","~$&env","^S","^T"]]],"~:protocol-impl",null,"~:arglists-meta",["^Q",[null,null]],"^L",1,"~:variadic?",false,"^K",25,"^O",true,"~:ret-tag",["^4",["~$seq","~$cljs.core/IList"]],"^M",25,"~:max-fixed-arity",4,"~:fn-var",false,"^P",["^Q",["^R",["^Q",[["^S","^T"]]]]],"^U","Run the body with the given compilation state Atom<Map>."],"^5",["^ ","^H",null,"^I",["^ ","^J","/home/jp/projects/react-med/target/public/cljs-out/prod/cljs/analyzer/api.cljc","^K",165,"^L",7,"^M",165,"^N",14,"^P",["^Q",["^R",["^Q",[["~$sym"],["^S","^16"]]]]],"^U","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns.","~:top-fn",["^ ","^10",false,"~:fixed-arity",2,"^14",2,"^W",["^Q",[["^16"],["^S","^16"]]],"^P",["^Q",[["^16"],["^S","^16"]]],"^[",["^Q",[null,null]]]],"^<","~$cljs.analyzer.api/find-ns","^J","target/public/cljs-out/prod/cljs/analyzer/api.cljc","^N",14,"^17",["^ ","^10",false,"^18",2,"^14",2,"^W",["^Q",[["^16"],["^S","^16"]]],"^P",["^Q",[["^16"],["^S","^16"]]],"^[",["^Q",[null,null]]],"^W",["^Q",[["^16"],["^S","^16"]]],"^Z",null,"^18",2,"^[",["^Q",[null,null]],"^L",1,"^10",false,"~:methods",[["^ ","^18",1,"^10",false,"~:tag","~$any"],["^ ","^18",2,"^10",false,"^1;",["^4",[null,"^1<"]]]],"^K",165,"^M",165,"^14",2,"^15",true,"^P",["^Q",[["^16"],["^S","^16"]]],"^U","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns."],"^6",["^ ","^H",null,"^I",["^ ","^J","/home/jp/projects/react-med/target/public/cljs-out/prod/cljs/analyzer/api.cljc","^K",207,"^L",7,"^M",207,"^N",16,"^P",["^Q",["^R",["^Q",[["~$ns"],["^S","^1="]]]]],"^U","Removes the namespace named by the symbol.","^17",["^ ","^10",false,"^18",2,"^14",2,"^W",["^Q",[["^1="],["^S","^1="]]],"^P",["^Q",[["^1="],["^S","^1="]]],"^[",["^Q",[null,null]]]],"^<","~$cljs.analyzer.api/remove-ns","^J","target/public/cljs-out/prod/cljs/analyzer/api.cljc","^N",16,"^17",["^ ","^10",false,"^18",2,"^14",2,"^W",["^Q",[["^1="],["^S","^1="]]],"^P",["^Q",[["^1="],["^S","^1="]]],"^[",["^Q",[null,null]]],"^W",["^Q",[["^1="],["^S","^1="]]],"^Z",null,"^18",2,"^[",["^Q",[null,null]],"^L",1,"^10",false,"^1:",[["^ ","^18",1,"^10",false,"^1;","^1<"],["^ ","^18",2,"^10",false,"^1;",["^4",[null,"^1<"]]]],"^K",207,"^M",207,"^14",2,"^15",true,"^P",["^Q",[["^1="],["^S","^1="]]],"^U","Removes the namespace named by the symbol."],"^7",["^ ","^H",null,"^I",["^ ","^J","/home/jp/projects/react-med/target/public/cljs-out/prod/cljs/analyzer/api.cljc","^K",185,"^L",7,"^M",185,"^N",17,"^P",["^Q",["^R",["^Q",[["^1="],["^S","^1="]]]]],"^U","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars.","^17",["^ ","^10",false,"^18",2,"^14",2,"^W",["^Q",[["^1="],["^S","^1="]]],"^P",["^Q",[["^1="],["^S","^1="]]],"^[",["^Q",[null,null]]]],"^<","~$cljs.analyzer.api/ns-publics","^J","target/public/cljs-out/prod/cljs/analyzer/api.cljc","^N",17,"^17",["^ ","^10",false,"^18",2,"^14",2,"^W",["^Q",[["^1="],["^S","^1="]]],"^P",["^Q",[["^1="],["^S","^1="]]],"^[",["^Q",[null,null]]],"^W",["^Q",[["^1="],["^S","^1="]]],"^Z",null,"^18",2,"^[",["^Q",[null,null]],"^L",1,"^10",false,"^1:",[["^ ","^18",1,"^10",false,"^1;","^1<"],["^ ","^18",2,"^10",false,"^1;",["^4",[null,"~$clj","^1<"]]]],"^K",185,"^M",185,"^14",2,"^15",true,"^P",["^Q",[["^1="],["^S","^1="]]],"^U","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars."],"~$get-options",["^ ","^H",null,"^I",["^ ","^J","/home/jp/projects/react-med/target/public/cljs-out/prod/cljs/analyzer/api.cljc","^K",55,"^L",7,"^M",55,"^N",18,"^P",["^Q",["^R",["^Q",[[],["^S"]]]]],"^U","Return the compiler options from compiler state.","^17",["^ ","^10",false,"^18",1,"^14",1,"^W",["^Q",[[],["^S"]]],"^P",["^Q",[[],["^S"]]],"^[",["^Q",[null,null]]]],"^<","~$cljs.analyzer.api/get-options","^J","target/public/cljs-out/prod/cljs/analyzer/api.cljc","^N",18,"^17",["^ ","^10",false,"^18",1,"^14",1,"^W",["^Q",[[],["^S"]]],"^P",["^Q",[[],["^S"]]],"^[",["^Q",[null,null]]],"^W",["^Q",[[],["^S"]]],"^Z",null,"^18",1,"^[",["^Q",[null,null]],"^L",1,"^10",false,"^1:",[["^ ","^18",0,"^10",false,"^1;","^1<"],["^ ","^18",1,"^10",false,"^1;",["^4",["^1<","~$clj-nil"]]]],"^K",55,"^M",55,"^14",1,"^15",true,"^P",["^Q",[[],["^S"]]],"^U","Return the compiler options from compiler state."],"~$in-cljs-user",["^ ","^H",null,"^I",["^ ","^J","/home/jp/projects/react-med/target/public/cljs-out/prod/cljs/analyzer/api.cljc","^N",23,"^17",["^ ","^10",true,"^18",1,"^14",1,"^W",["^Q",[["^Q",["^@","^T"]]]],"^P",["^Q",[["^@","~$&","^T"]]],"^[",["^Q",[null]]],"^L",11,"^K",215,"^O",true,"^M",215,"^P",["^Q",["^R",["^Q",[["^@","~$&","^T"]]]]],"^U","Binds cljs.analyzer/*cljs-ns* to 'cljs.user and uses the given compilation\n  environment atom and runs body."],"^<","~$cljs.analyzer.api/in-cljs-user","^J","target/public/cljs-out/prod/cljs/analyzer/api.cljc","^N",23,"^17",["^ ","^10",true,"^18",1,"^14",1,"^W",["^Q",[["^Q",["^@","^T"]]]],"^P",["^Q",[["^@","~$&","^T"]]],"^[",["^Q",[null]]],"^W",["^Q",[["^Q",["^@","^T"]]]],"^Z",null,"^18",1,"^[",["^Q",[null]],"^L",1,"^10",true,"^1:",[["^ ","^18",1,"^10",true,"^1;",["^4",["^12","^13"]]]],"^K",215,"^O",true,"^11","^1<","^M",215,"^14",1,"^15",false,"^P",["^Q",[["^@","~$&","^T"]]],"^U","Binds cljs.analyzer/*cljs-ns* to 'cljs.user and uses the given compilation\n  environment atom and runs body."],"~$warning-enabled?",["^ ","^H",null,"^I",["^ ","^J","/home/jp/projects/react-med/target/public/cljs-out/prod/cljs/analyzer/api.cljc","^K",43,"^L",7,"^M",43,"^N",23,"^P",["^Q",["^R",["^Q",[["~$warning-type"]]]]],"^U","Test if the given warning-type is enabled."],"^<","~$cljs.analyzer.api/warning-enabled?","^J","target/public/cljs-out/prod/cljs/analyzer/api.cljc","^N",23,"^W",["^Q",[["^1G"]]],"^Z",null,"^[",["^Q",[null,null]],"^L",1,"^10",false,"^K",43,"^11","^1<","^M",43,"^14",1,"^15",true,"^P",["^Q",["^R",["^Q",[["^1G"]]]]],"^U","Test if the given warning-type is enabled."],"^8",["^ ","^H",null,"^I",["^ ","^J","/home/jp/projects/react-med/target/public/cljs-out/prod/cljs/analyzer/api.cljc","^K",198,"^L",7,"^M",198,"^N",17,"^P",["^Q",["^R",["^Q",[["^1=","^16"],["^S","^1=","^16"]]]]],"^U","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var.","^17",["^ ","^10",false,"^18",3,"^14",3,"^W",["^Q",[["^1=","^16"],["^S","^1=","^16"]]],"^P",["^Q",[["^1=","^16"],["^S","^1=","^16"]]],"^[",["^Q",[null,null]]]],"^<","~$cljs.analyzer.api/ns-resolve","^J","target/public/cljs-out/prod/cljs/analyzer/api.cljc","^N",17,"^17",["^ ","^10",false,"^18",3,"^14",3,"^W",["^Q",[["^1=","^16"],["^S","^1=","^16"]]],"^P",["^Q",[["^1=","^16"],["^S","^1=","^16"]]],"^[",["^Q",[null,null]]],"^W",["^Q",[["^1=","^16"],["^S","^1=","^16"]]],"^Z",null,"^18",3,"^[",["^Q",[null,null]],"^L",1,"^10",false,"^1:",[["^ ","^18",2,"^10",false,"^1;","^1<"],["^ ","^18",3,"^10",false,"^1;",["^4",[null,"^1<"]]]],"^K",198,"^M",198,"^14",3,"^15",true,"^P",["^Q",[["^1=","^16"],["^S","^1=","^16"]]],"^U","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var."],"~$empty-state",["^ ","^H",null,"^I",["^ ","^J","/home/jp/projects/react-med/target/public/cljs-out/prod/cljs/analyzer/api.cljc","^K",20,"^L",7,"^M",20,"^N",18,"^P",["^Q",["^R",["^Q",[[]]]]],"^U","Creates an empty compilation state Atom<Map>."],"^<","~$cljs.analyzer.api/empty-state","^J","target/public/cljs-out/prod/cljs/analyzer/api.cljc","^N",18,"^W",["^Q",[[]]],"^Z",null,"^[",["^Q",[null,null]],"^L",1,"^10",false,"^K",20,"^11","^1<","^M",20,"^14",0,"^15",true,"^P",["^Q",["^R",["^Q",[[]]]]],"^U","Creates an empty compilation state Atom<Map>."],"~$no-warn",["^ ","^H",null,"^I",["^ ","^J","/home/jp/projects/react-med/target/public/cljs-out/prod/cljs/analyzer/api.cljc","^N",18,"^17",["^ ","^10",true,"^18",0,"^14",0,"^W",["^Q",[["^Q",["^T"]]]],"^P",["^Q",[["~$&","^T"]]],"^[",["^Q",[null]]],"^L",11,"^K",36,"^O",true,"^M",36,"^P",["^Q",["^R",["^Q",[["~$&","^T"]]]]],"^U","Disable analyzer warnings for any analysis executed in body."],"^<","~$cljs.analyzer.api/no-warn","^J","target/public/cljs-out/prod/cljs/analyzer/api.cljc","^N",18,"^17",["^ ","^10",true,"^18",0,"^14",0,"^W",["^Q",[["^Q",["^T"]]]],"^P",["^Q",[["~$&","^T"]]],"^[",["^Q",[null]]],"^W",["^Q",[["^Q",["^T"]]]],"^Z",null,"^18",0,"^[",["^Q",[null]],"^L",1,"^10",true,"^1:",[["^ ","^18",0,"^10",true,"^1;",["^4",["^12","^13"]]]],"^K",36,"^O",true,"^11","^1<","^M",36,"^14",0,"^15",false,"^P",["^Q",[["~$&","^T"]]],"^U","Disable analyzer warnings for any analysis executed in body."],"~$empty-env",["^ ","^H",null,"^I",["^ ","^J","/home/jp/projects/react-med/target/public/cljs-out/prod/cljs/analyzer/api.cljc","^K",31,"^L",7,"^M",31,"^N",16,"^P",["^Q",["^R",["^Q",[[]]]]],"^U","Creates an empty analysis environment."],"^<","~$cljs.analyzer.api/empty-env","^J","target/public/cljs-out/prod/cljs/analyzer/api.cljc","^N",16,"^W",["^Q",[[]]],"^Z",null,"^[",["^Q",[null,null]],"^L",1,"^10",false,"^K",31,"^11","^1<","^M",31,"^14",0,"^15",true,"^P",["^Q",["^R",["^Q",[[]]]]],"^U","Creates an empty analysis environment."],"~$default-warning-handler",["^ ","^H",null,"^I",["^ ","^J","/home/jp/projects/react-med/target/public/cljs-out/prod/cljs/analyzer/api.cljc","^K",48,"^L",7,"^M",48,"^N",30,"^P",["^Q",["^R",["^Q",[["^1G","^@","~$extra"]]]]],"^U","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^<","~$cljs.analyzer.api/default-warning-handler","^J","target/public/cljs-out/prod/cljs/analyzer/api.cljc","^N",30,"^W",["^Q",[["^1G","^@","^1Q"]]],"^Z",null,"^[",["^Q",[null,null]],"^L",1,"^10",false,"^K",48,"^11",["^4",[null,"^1C"]],"^M",48,"^14",3,"^15",true,"^P",["^Q",["^R",["^Q",[["^1G","^@","^1Q"]]]]],"^U","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^9",["^ ","^H",null,"^I",["^ ","^J","/home/jp/projects/react-med/target/public/cljs-out/prod/cljs/analyzer/api.cljc","^K",174,"^L",7,"^M",174,"^N",17,"^P",["^Q",["^R",["^Q",[["^1="],["^S","^1="]]]]],"^U","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars.","^17",["^ ","^10",false,"^18",2,"^14",2,"^W",["^Q",[["^1="],["^S","^1="]]],"^P",["^Q",[["^1="],["^S","^1="]]],"^[",["^Q",[null,null]]]],"^<","~$cljs.analyzer.api/ns-interns","^J","target/public/cljs-out/prod/cljs/analyzer/api.cljc","^N",17,"^17",["^ ","^10",false,"^18",2,"^14",2,"^W",["^Q",[["^1="],["^S","^1="]]],"^P",["^Q",[["^1="],["^S","^1="]]],"^[",["^Q",[null,null]]],"^W",["^Q",[["^1="],["^S","^1="]]],"^Z",null,"^18",2,"^[",["^Q",[null,null]],"^L",1,"^10",false,"^1:",[["^ ","^18",1,"^10",false,"^1;","^1<"],["^ ","^18",2,"^10",false,"^1;",["^4",[null,"^1<","^1C"]]]],"^K",174,"^M",174,"^14",2,"^15",true,"^P",["^Q",[["^1="],["^S","^1="]]],"^U","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars."],"^:",["^ ","^H",null,"^I",["^ ","^J","/home/jp/projects/react-med/target/public/cljs-out/prod/cljs/analyzer/api.cljc","^K",157,"^L",7,"^M",157,"^N",13,"^P",["^Q",["^R",["^Q",[[],["^S"]]]]],"^U","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances.","^17",["^ ","^10",false,"^18",1,"^14",1,"^W",["^Q",[[],["^S"]]],"^P",["^Q",[[],["^S"]]],"^[",["^Q",[null,null]]]],"^<","~$cljs.analyzer.api/all-ns","^J","target/public/cljs-out/prod/cljs/analyzer/api.cljc","^N",13,"^17",["^ ","^10",false,"^18",1,"^14",1,"^W",["^Q",[[],["^S"]]],"^P",["^Q",[[],["^S"]]],"^[",["^Q",[null,null]]],"^W",["^Q",[[],["^S"]]],"^Z",null,"^18",1,"^[",["^Q",[null,null]],"^L",1,"^10",false,"^1:",[["^ ","^18",0,"^10",false,"^1;","^1<"],["^ ","^18",1,"^10",false,"^1;",["^4",["~$cljs.core/KeySeq","^1C"]]]],"^K",157,"^M",157,"^14",1,"^15",true,"^P",["^Q",[[],["^S"]]],"^U","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances."],"^;",["^ ","^H",null,"^I",["^ ","^J","/home/jp/projects/react-med/target/public/cljs-out/prod/cljs/analyzer/api.cljc","^K",145,"^L",7,"^M",145,"^N",14,"^P",["^Q",["^R",["^Q",[["^@","^16"]]]]],"^U","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"^<","~$cljs.analyzer.api/resolve","^J","target/public/cljs-out/prod/cljs/analyzer/api.cljc","^N",14,"^W",["^Q",[["^@","^16"]]],"^Z",null,"^[",["^Q",[null,null]],"^L",1,"^10",false,"^K",145,"^M",145,"^14",2,"^15",true,"^P",["^Q",["^R",["^Q",[["^@","^16"]]]]],"^U","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"~$get-js-index",["^ ","^H",null,"^I",["^ ","^J","/home/jp/projects/react-med/target/public/cljs-out/prod/cljs/analyzer/api.cljc","^K",61,"^L",7,"^M",61,"^N",19,"^P",["^Q",["^R",["^Q",[[],["^S"]]]]],"^U","Return the currently computed Google Closure js dependency index from the\n  compiler state.","^17",["^ ","^10",false,"^18",1,"^14",1,"^W",["^Q",[[],["^S"]]],"^P",["^Q",[[],["^S"]]],"^[",["^Q",[null,null]]]],"^<","~$cljs.analyzer.api/get-js-index","^J","target/public/cljs-out/prod/cljs/analyzer/api.cljc","^N",19,"^17",["^ ","^10",false,"^18",1,"^14",1,"^W",["^Q",[[],["^S"]]],"^P",["^Q",[[],["^S"]]],"^[",["^Q",[null,null]]],"^W",["^Q",[[],["^S"]]],"^Z",null,"^18",1,"^[",["^Q",[null,null]],"^L",1,"^10",false,"^1:",[["^ ","^18",0,"^10",false,"^1;",["^4",["^1<","^1C"]]],["^ ","^18",1,"^10",false,"^1;",["^4",["^1<","^1C"]]]],"^K",61,"^M",61,"^14",1,"^15",true,"^P",["^Q",[[],["^S"]]],"^U","Return the currently computed Google Closure js dependency index from the\n  compiler state."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:cljs.analyzer/namespaces","~$cljs.core/binding","~:private","~:macros","~:js-dependency-index","~$cljs.analyzer/*cljs-warnings*","^F","~$cljs.env/with-compiler-env","~:options","^R","~$cljs.analyzer/*cljs-ns*","~$cljs.user"]],"~:order",["^27","^22","^26","^28","^25","^21","^24","^F","^23","^29","^R","^2:"]],"^U","This is intended to be a stable api for those who need programmatic access\n  to the analyzer."]