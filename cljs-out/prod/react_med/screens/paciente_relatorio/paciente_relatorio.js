// Compiled by ClojureScript 1.10.520 {:static-fns true, :optimize-constants true}
goog.provide('react_med.screens.paciente_relatorio.paciente_relatorio');
goog.require('cljs.core');
goog.require('cljs.core.constants');
goog.require('react_med.shell_components');
goog.require('react_med.util');
goog.require('re_frame.core');
goog.require('day8.re_frame.tracing');
goog.require('react_med.screens.paciente_relatorio.bioimpedance');
react_med.screens.paciente_relatorio.paciente_relatorio.global$module$slider = goog.global["Slider"];
react_med.screens.paciente_relatorio.paciente_relatorio.two_line = (function react_med$screens$paciente_relatorio$paciente_relatorio$two_line(first_content,second_content){
return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,({"display": "flex", "flexDirection": "column", "alignItems": "center", "height": (48), "padding": "20px 5px"})], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$b,first_content], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$span,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,({"fontSize": "x-large"})], null),second_content], null)], null);
});
react_med.screens.paciente_relatorio.paciente_relatorio.point_in_a_scale = (function react_med$screens$paciente_relatorio$paciente_relatorio$point_in_a_scale(p__20279){
var map__20280 = p__20279;
var map__20280__$1 = (((((!((map__20280 == null))))?(((((map__20280.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__20280.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__20280):map__20280);
var min = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20280__$1,cljs.core.cst$kw$min);
var max = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20280__$1,cljs.core.cst$kw$max);
var value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20280__$1,cljs.core.cst$kw$value);
var suffix = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20280__$1,cljs.core.cst$kw$suffix);
var class_sufix = clojure.string.replace([cljs.core.str.cljs$core$IFn$_invoke$arity$1(min),cljs.core.str.cljs$core$IFn$_invoke$arity$1(max),cljs.core.str.cljs$core$IFn$_invoke$arity$1(value)].join(''),".","");
var value_percentage = ((value - min) / (max - min));
var value_color = (((value_percentage < 0.15))?"red":(((value_percentage < 0.25))?"#d0c215":(((value_percentage < 0.75))?"#15d015":(((value_percentage < 0.85))?"#d0c215":(((value_percentage < (1)))?"red":"#15d015"
)))));
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$_LT__GT_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$style,[".slider-root{\n        background: linear-gradient(90deg, rgba(183,141,130,0.3) 0%, rgba(25,252,3,0) 25%, rgba(25,252,3,0) 75%, rgba(183,141,130,0.3) 100%);\n        height: 30px;\n        border-radius: 6px;\n        color: mediumseagreen;\n        padding: 0;\n        margin: 20px 0;\n        }\n        .slider-thumb{\n        color: white;\n        border: 1px solid mediumseagreen;\n        }\n        .slider-track {\n        height: 0px;\n        }\n        .slider-rail {\n        height: 1px;\n        }\n        .slider-mark {\n        width: 0;\n        }\n        .slider-markLabel-",cljs.core.str.cljs$core$IFn$_invoke$arity$1(class_sufix),"{\n        color: black;\n        top: 15%;\n        }\n        .slider-markLabelActive-",cljs.core.str.cljs$core$IFn$_invoke$arity$1(class_sufix),"{\n        color: ",value_color,";\n        top: -100%;\n        font-size: 1.1em;\n        font-weith: bold;\n        }\n        "].join('')], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$_GT_,react_med.screens.paciente_relatorio.paciente_relatorio.global$module$slider,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$min,min,cljs.core.cst$kw$max,max,cljs.core.cst$kw$disabled,true,cljs.core.cst$kw$value,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [value,value], null),cljs.core.cst$kw$marks,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$value,min,cljs.core.cst$kw$label,clojure.string.replace([cljs.core.str.cljs$core$IFn$_invoke$arity$1(min),cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix)].join(''),".",",")], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$value,value,cljs.core.cst$kw$label,clojure.string.replace([cljs.core.str.cljs$core$IFn$_invoke$arity$1(value),cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix)].join(''),".",",")], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$value,max,cljs.core.cst$kw$label,clojure.string.replace([cljs.core.str.cljs$core$IFn$_invoke$arity$1(max),cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix)].join(''),".",",")], null)], null),cljs.core.cst$kw$classes,new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$thumb,"slider-thumb",cljs.core.cst$kw$track,"slider-track",cljs.core.cst$kw$valueLabel,"slider-valueLabel",cljs.core.cst$kw$mark,"slider-mark",cljs.core.cst$kw$markLabel,["slider-markLabel-",cljs.core.str.cljs$core$IFn$_invoke$arity$1(class_sufix)].join(''),cljs.core.cst$kw$markLabelActive,["slider-markLabelActive-",cljs.core.str.cljs$core$IFn$_invoke$arity$1(class_sufix)].join(''),cljs.core.cst$kw$root,"slider-root"], null)], null)], null)], null);
});
react_med.screens.paciente_relatorio.paciente_relatorio.avaliacao_info = (function react_med$screens$paciente_relatorio$paciente_relatorio$avaliacao_info(p__20282){
var vec__20283 = p__20282;
var selected_patient = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20283,(0),null);
var selected_avaliacao = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20283,(1),null);
return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([selected_avaliacao,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(selected_patient,cljs.core.cst$kw$avaliacoes)], 0));
});
var G__20286_20292 = cljs.core.cst$kw$react_DASH_med$screens$paciente_DASH_relatorio$paciente_DASH_relatorio_SLASH_avaliacao_DASH_info;
var G__20287_20293 = cljs.core.cst$kw$_LT__DASH_;
var G__20288_20294 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$react_DASH_med$screens$paciente_DASH_avaliacao_SLASH_selected_DASH_avaliacao], null);
var G__20289_20295 = cljs.core.cst$kw$_LT__DASH_;
var G__20290_20296 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$react_DASH_med$screens$patient_DASH_info$core_SLASH_selected_DASH_patient], null);
var G__20291_20297 = react_med.screens.paciente_relatorio.paciente_relatorio.avaliacao_info;
(re_frame.core.reg_sub.cljs$core$IFn$_invoke$arity$6 ? re_frame.core.reg_sub.cljs$core$IFn$_invoke$arity$6(G__20286_20292,G__20287_20293,G__20288_20294,G__20289_20295,G__20290_20296,G__20291_20297) : re_frame.core.reg_sub.call(null,G__20286_20292,G__20287_20293,G__20288_20294,G__20289_20295,G__20290_20296,G__20291_20297));
react_med.screens.paciente_relatorio.paciente_relatorio.relatorio_component = (function react_med$screens$paciente_relatorio$paciente_relatorio$relatorio_component(){
var avaliacao_info = (function (){var G__20299 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$react_DASH_med$screens$paciente_DASH_relatorio$paciente_DASH_relatorio_SLASH_avaliacao_DASH_info], null);
return (react_med.util._LT_sub.cljs$core$IFn$_invoke$arity$1 ? react_med.util._LT_sub.cljs$core$IFn$_invoke$arity$1(G__20299) : react_med.util._LT_sub.call(null,G__20299));
})();
var em_relacao_peso = ((function (avaliacao_info){
return (function (p1__20298_SHARP_){
return parseFloat(((p1__20298_SHARP_ / cljs.core.cst$kw$peso.cljs$core$IFn$_invoke$arity$1(avaliacao_info)) * (100)).toFixed((1)));
});})(avaliacao_info))
;
var gordura_corporal = em_relacao_peso((cljs.core.cst$kw$peso.cljs$core$IFn$_invoke$arity$1(avaliacao_info) - react_med.screens.paciente_relatorio.bioimpedance.massa_livre_de_gordura(avaliacao_info)));
var massa_musculoesqueletica = parseFloat(((react_med.screens.paciente_relatorio.bioimpedance.massa_musculoesqueletica(avaliacao_info) / (cljs.core.cst$kw$estatura.cljs$core$IFn$_invoke$arity$1(avaliacao_info) * cljs.core.cst$kw$estatura.cljs$core$IFn$_invoke$arity$1(avaliacao_info))) * (10000)).toFixed((1)));
var agua_corporal_total = em_relacao_peso(react_med.screens.paciente_relatorio.bioimpedance.agua_corporal(avaliacao_info));
var agua_extracelular = em_relacao_peso(react_med.screens.paciente_relatorio.bioimpedance.agua_extracelular(avaliacao_info));
var agua_intracelular = em_relacao_peso(react_med.screens.paciente_relatorio.bioimpedance.agua_intracelular(avaliacao_info));
var imc = parseFloat((cljs.core.cst$kw$peso.cljs$core$IFn$_invoke$arity$1(avaliacao_info) / ((cljs.core.cst$kw$estatura.cljs$core$IFn$_invoke$arity$1(avaliacao_info) * cljs.core.cst$kw$estatura.cljs$core$IFn$_invoke$arity$1(avaliacao_info)) * 1.0E-4)).toFixed((1)));
var line_style = ({"display": "flex", "alignItems": "center", "height": (48), "whiteSpace": "pre"});
return new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,({"display": "flex", "padding": "0 35px", "maxWidth": "400px", "flexDirection": "column", "alignItems": "center"})], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,line_style], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$b,"Gordura Corporal"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [react_med.screens.paciente_relatorio.paciente_relatorio.point_in_a_scale,new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$min,(4),cljs.core.cst$kw$max,(38),cljs.core.cst$kw$suffix,"%",cljs.core.cst$kw$value,gordura_corporal], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,line_style], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$b,"Massa Musculoesquel\u00E9tica"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [react_med.screens.paciente_relatorio.paciente_relatorio.point_in_a_scale,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$min,(5),cljs.core.cst$kw$max,(30),cljs.core.cst$kw$value,massa_musculoesqueletica], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,line_style], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$b,"\u00C1gua Corporal Total"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [react_med.screens.paciente_relatorio.paciente_relatorio.point_in_a_scale,new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$min,(50),cljs.core.cst$kw$max,(80),cljs.core.cst$kw$suffix,"%",cljs.core.cst$kw$value,65.9], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,line_style], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$b,"\u00C1gua Extracelular"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [react_med.screens.paciente_relatorio.paciente_relatorio.point_in_a_scale,new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$min,(10),cljs.core.cst$kw$max,(40),cljs.core.cst$kw$suffix,"%",cljs.core.cst$kw$value,agua_extracelular], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,line_style], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$b,"\u00C1gua Intracelular"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [react_med.screens.paciente_relatorio.paciente_relatorio.point_in_a_scale,new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$min,(30),cljs.core.cst$kw$max,(60),cljs.core.cst$kw$suffix,"%",cljs.core.cst$kw$value,agua_intracelular], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,line_style], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$b,"IMC"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [react_med.screens.paciente_relatorio.paciente_relatorio.point_in_a_scale,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$min,(12),cljs.core.cst$kw$max,(36),cljs.core.cst$kw$value,imc], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [react_med.screens.paciente_relatorio.paciente_relatorio.two_line,"Imped\u00E2ncia",(function (){var G__20300 = react_med.screens.paciente_relatorio.bioimpedance.impedancia(avaliacao_info);
return Math.round(G__20300);
})()], null)], null);
});
react_med.screens.paciente_relatorio.paciente_relatorio.view = (function react_med$screens$paciente_relatorio$paciente_relatorio$view(){
var paciente_selectionado = (function (){var G__20301 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$react_DASH_med$screens$patient_DASH_info$core_SLASH_selected_DASH_patient], null);
return (react_med.util._LT_sub.cljs$core$IFn$_invoke$arity$1 ? react_med.util._LT_sub.cljs$core$IFn$_invoke$arity$1(G__20301) : react_med.util._LT_sub.call(null,G__20301));
})();
var menu_structure = (function (){var G__20302 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$react_DASH_med$routes_SLASH_side_DASH_menu], null);
return (react_med.util._LT_sub.cljs$core$IFn$_invoke$arity$1 ? react_med.util._LT_sub.cljs$core$IFn$_invoke$arity$1(G__20302) : react_med.util._LT_sub.call(null,G__20302));
})();
var actions = (function (){var G__20303 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$react_DASH_med$routes_SLASH_actions], null);
return (react_med.util._LT_sub.cljs$core$IFn$_invoke$arity$1 ? react_med.util._LT_sub.cljs$core$IFn$_invoke$arity$1(G__20303) : react_med.util._LT_sub.call(null,G__20303));
})();
var tabs = (function (){var G__20304 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$react_DASH_med$routes_SLASH_tabs], null);
return (react_med.util._LT_sub.cljs$core$IFn$_invoke$arity$1 ? react_med.util._LT_sub.cljs$core$IFn$_invoke$arity$1(G__20304) : react_med.util._LT_sub.call(null,G__20304));
})();
var title = (function (){var G__20305 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$react_DASH_med$routes_SLASH_title], null);
return (react_med.util._LT_sub.cljs$core$IFn$_invoke$arity$1 ? react_med.util._LT_sub.cljs$core$IFn$_invoke$arity$1(G__20305) : react_med.util._LT_sub.call(null,G__20305));
})();
return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [react_med.shell_components.main_panel,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [react_med.shell_components.header,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [react_med.shell_components.top_bar,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [react_med.shell_components.left_icon,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$variation,"<-"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [react_med.shell_components.screen_title,title], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [react_med.shell_components.tabs_menu,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$menu_DASH_options,tabs], null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [react_med.shell_components.main_content,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [react_med.screens.paciente_relatorio.paciente_relatorio.relatorio_component], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [react_med.shell_components.drawer_menu,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$menu_DASH_structure,menu_structure], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [react_med.shell_components.actions_menu,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$actions,actions], null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [react_med.shell_components.bottom_bar], null)], null);
});
