["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$HTMLDocument",["^ ","~$prototype",["^ ","~$getElementById",["^ "]]]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$react-med.screens.paciente-relatorio.tollerance-ellipse-component","~:imports",null,"~:requires",["^ ","~$material-circular-progress","~$circular-progress","^>","^>","~$google-charts","^?","~$util","~$react-med.util","^A","^A"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$<sub","^A","~$>evt","^A"],"~:defs",["^ ","~$draw-chart",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/smokeonline/projects/Gobbo/react-med-/src/react_med/screens/paciente_relatorio/tollerance_ellipse_component.cljs","~:line",8,"~:column",7,"~:end-line",8,"~:end-column",17,"~:arglists",["~#list",["~$quote",["^P",[["~$element-id","~$data-array","~$options"]]]]]],"^9","~$react-med.screens.paciente-relatorio.tollerance-ellipse-component/draw-chart","^J","/home/smokeonline/projects/Gobbo/react-med-/src/react_med/screens/paciente_relatorio/tollerance_ellipse_component.cljs","^N",17,"~:method-params",["^P",[["^R","^S","^T"]]],"~:protocol-impl",null,"~:arglists-meta",["^P",[null,null]],"^L",1,"~:variadic?",false,"^K",8,"~:ret-tag","~$function","^M",8,"~:max-fixed-arity",3,"~:fn-var",true,"^O",["^P",["^Q",["^P",[["^R","^S","^T"]]]]]],"~$series-points->data-array",["^ ","^H",null,"^I",["^ ","^J","/home/smokeonline/projects/Gobbo/react-med-/src/react_med/screens/paciente_relatorio/tollerance_ellipse_component.cljs","^K",20,"^L",7,"^M",20,"^N",32,"^O",["^P",["^Q",["^P",[["~$category-name","~$&","~$series"]]]]],"~:doc","Receive head and points like ['y' [1 2] [3 4]]\n  Output the data array expected by the chart lib like [['category-name' 'y'] [1 2] [3 4]]\n  Or when multiple series sent, it fill points with nil like\n  In (series-points->data-array 'category-name' ['y' [1 2] [3 4]] ['z' [5 6] [7 8]])\n  Out [[category-name y z] [1 2 nil] [3 4 nil] [5 nil 6] [7 nil 8]]","~:top-fn",["^ ","^Y",true,"~:fixed-arity",1,"^10",1,"^V",[["^P",["^13","^14"]]],"^O",["^P",[["^13","~$&","^14"]]],"^X",["^P",[null]]]],"^9","~$react-med.screens.paciente-relatorio.tollerance-ellipse-component/series-points->data-array","^J","/home/smokeonline/projects/Gobbo/react-med-/src/react_med/screens/paciente_relatorio/tollerance_ellipse_component.cljs","^N",32,"^16",["^ ","^Y",true,"^17",1,"^10",1,"^V",[["^P",["^13","^14"]]],"^O",["^P",[["^13","~$&","^14"]]],"^X",["^P",[null]]],"^V",[["^P",["^13","^14"]]],"^W",null,"^17",1,"^X",["^P",[null]],"^L",1,"^Y",true,"~:methods",[["^ ","^17",1,"^Y",true,"~:tag","~$any"]],"^K",20,"^Z","^1;","^M",20,"^10",1,"^11",true,"^O",["^P",[["^13","~$&","^14"]]],"^15","Receive head and points like ['y' [1 2] [3 4]]\n  Output the data array expected by the chart lib like [['category-name' 'y'] [1 2] [3 4]]\n  Or when multiple series sent, it fill points with nil like\n  In (series-points->data-array 'category-name' ['y' [1 2] [3 4]] ['z' [5 6] [7 8]])\n  Out [[category-name y z] [1 2 nil] [3 4 nil] [5 nil 6] [7 nil 8]]"],"~$ellipse",["^ ","^H",null,"^I",["^ ","^J","/home/smokeonline/projects/Gobbo/react-med-/src/react_med/screens/paciente_relatorio/tollerance_ellipse_component.cljs","^K",44,"^L",7,"^M",44,"^N",14,"^O",["^P",["^Q",["^P",[["~$name",["~$cx","~$cy"],"~$radius-x","~$radius-y","~$rotation"]]]]]],"^9","~$react-med.screens.paciente-relatorio.tollerance-ellipse-component/ellipse","^J","/home/smokeonline/projects/Gobbo/react-med-/src/react_med/screens/paciente_relatorio/tollerance_ellipse_component.cljs","^N",14,"^V",["^P",[["^1=","~$p__19608","^1@","^1A","^1B"]]],"^W",null,"^X",["^P",[null,null]],"^L",1,"^Y",false,"^K",44,"^Z","~$clj","^M",44,"^10",5,"^11",true,"^O",["^P",["^Q",["^P",[["^1=",["^1>","^1?"],"^1@","^1A","^1B"]]]]]],"~$eigen-val",["^ ","^H",null,"^I",["^ ","^J","/home/smokeonline/projects/Gobbo/react-med-/src/react_med/screens/paciente_relatorio/tollerance_ellipse_component.cljs","^K",57,"^L",7,"^M",57,"^N",16,"^O",["^P",["^Q",["^P",[[[["~$a","~$b"],["~$c","~$d"]]]]]]],"^15","Calculate the eigenvalues for a 2x2 matrix.\n  Receives a 2x2 matrix in the format [[a b] [c d]]\n  Returns the tuple of eigenvalues, e.g. [val1 val2]"],"^9","~$react-med.screens.paciente-relatorio.tollerance-ellipse-component/eigen-val","^J","/home/smokeonline/projects/Gobbo/react-med-/src/react_med/screens/paciente_relatorio/tollerance_ellipse_component.cljs","^N",16,"^V",["^P",[["~$p__19616"]]],"^W",null,"^X",["^P",[null,null]],"^L",1,"^Y",false,"^K",57,"^Z","~$cljs.core/IVector","^M",57,"^10",1,"^11",true,"^O",["^P",["^Q",["^P",[[[["~$a","~$b"],["~$c","~$d"]]]]]]],"^15","Calculate the eigenvalues for a 2x2 matrix.\n  Receives a 2x2 matrix in the format [[a b] [c d]]\n  Returns the tuple of eigenvalues, e.g. [val1 val2]"],"~$eigen-vec",["^ ","^H",null,"^I",["^ ","^J","/home/smokeonline/projects/Gobbo/react-med-/src/react_med/screens/paciente_relatorio/tollerance_ellipse_component.cljs","^K",70,"^L",7,"^M",70,"^N",16,"^O",["^P",["^Q",["^P",[["~$matrix-2x2"]]]]],"^15","Calculate the eigenvectors for a 2x2 matrix.\n  Receives a 2x2 matrix in the format [[a b] [c d]]\n  Returns a matrix representing 2 vectors in its columns, as [[v1-x v2-x]\n                                                              [v1-y v2-y]]"],"^9","~$react-med.screens.paciente-relatorio.tollerance-ellipse-component/eigen-vec","^J","/home/smokeonline/projects/Gobbo/react-med-/src/react_med/screens/paciente_relatorio/tollerance_ellipse_component.cljs","^N",16,"^V",["^P",[["^1K"]]],"^W",null,"^X",["^P",[null,null]],"^L",1,"^Y",false,"^K",70,"^Z","^1I","^M",70,"^10",1,"^11",true,"^O",["^P",["^Q",["^P",[["^1K"]]]]],"^15","Calculate the eigenvectors for a 2x2 matrix.\n  Receives a 2x2 matrix in the format [[a b] [c d]]\n  Returns a matrix representing 2 vectors in its columns, as [[v1-x v2-x]\n                                                              [v1-y v2-y]]"],"~$tolerance-ellipses-params",["^ ","^H",null,"^I",["^ ","^J","/home/smokeonline/projects/Gobbo/react-med-/src/react_med/screens/paciente_relatorio/tollerance_ellipse_component.cljs","^K",84,"^L",7,"^M",84,"^N",32,"^O",["^P",["^Q",["^P",[["~$standard-deviation-x","~$standard-deviation-y","~$pearson-r"]]]]],"^15","Receives the standard deviation of a dataset in x-axis, the standard\n  deviation in y-axis and the Pearson Correlation Coeficient r.\n  Returns the parameters necessary to draw the tollerance ellipses: a\n  vector of the x semi axis with values for 50%, 75% and 95% tolerances; a\n  vector of the y semi axis with values for 50%, 75% and 95% tolerances and\n  the slope, i.e. the ellipse rotation in degrees.\n  For further explanation see https://stats.stackexchange.com/questions/447694/ellipse-region-shape-from-standard-deviations/449226#449226"],"^9","~$react-med.screens.paciente-relatorio.tollerance-ellipse-component/tolerance-ellipses-params","^J","/home/smokeonline/projects/Gobbo/react-med-/src/react_med/screens/paciente_relatorio/tollerance_ellipse_component.cljs","^N",32,"^V",["^P",[["^1N","^1O","^1P"]]],"^W",null,"^X",["^P",[null,null]],"^L",1,"^Y",false,"^K",84,"^Z","^1I","^M",84,"^10",3,"^11",true,"^O",["^P",["^Q",["^P",[["^1N","^1O","^1P"]]]]],"^15","Receives the standard deviation of a dataset in x-axis, the standard\n  deviation in y-axis and the Pearson Correlation Coeficient r.\n  Returns the parameters necessary to draw the tollerance ellipses: a\n  vector of the x semi axis with values for 50%, 75% and 95% tolerances; a\n  vector of the y semi axis with values for 50%, 75% and 95% tolerances and\n  the slope, i.e. the ellipse rotation in degrees.\n  For further explanation see https://stats.stackexchange.com/questions/447694/ellipse-region-shape-from-standard-deviations/449226#449226"],"~$ellipse-chart-component",["^ ","^H",null,"^I",["^ ","^J","/home/smokeonline/projects/Gobbo/react-med-/src/react_med/screens/paciente_relatorio/tollerance_ellipse_component.cljs","^K",112,"^L",7,"^M",112,"^N",30,"^O",["^P",["^Q",["^P",[[["^ ","~:keys",["~$width","~$height","^14","^T"]]]]]]]],"^9","~$react-med.screens.paciente-relatorio.tollerance-ellipse-component/ellipse-chart-component","^J","/home/smokeonline/projects/Gobbo/react-med-/src/react_med/screens/paciente_relatorio/tollerance_ellipse_component.cljs","^N",30,"^V",["^P",[["~$p__19652"]]],"^W",null,"^X",["^P",[null,null]],"^L",1,"^Y",false,"^K",112,"^Z","^1I","^M",112,"^10",1,"^11",true,"^O",["^P",["^Q",["^P",[[["^ ","^1S",["^1T","^1U","^14","^T"]]]]]]]],"~$ellipse-chart-component2",["^ ","^H",null,"^I",["^ ","^J","/home/smokeonline/projects/Gobbo/react-med-/src/react_med/screens/paciente_relatorio/tollerance_ellipse_component.cljs","^K",122,"^L",7,"^M",122,"^N",31,"^O",["^P",["^Q",["^P",[[["^ ","^1S",["~$style","^1U","^14","^T"]]]]]]]],"^9","~$react-med.screens.paciente-relatorio.tollerance-ellipse-component/ellipse-chart-component2","^J","/home/smokeonline/projects/Gobbo/react-med-/src/react_med/screens/paciente_relatorio/tollerance_ellipse_component.cljs","^N",31,"^V",["^P",[["~$p__19655"]]],"^W",null,"^X",["^P",[null,null]],"^L",1,"^Y",false,"^K",122,"^Z","^1I","^M",122,"^10",1,"^11",true,"^O",["^P",["^Q",["^P",[[["^ ","^1S",["^1Y","^1U","^14","^T"]]]]]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^8",["~:else","~:series","~:>","~:component-did-mount","~:width","~:style","~:div","~:id","~:options","~:height"]],"~:order",["^24","^27","^2<","^25","^2;","^29","^2:","^28","^26","~:>"]],"^15",null]